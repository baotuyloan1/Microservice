server:
  port: 8080
spring:
  application:
    name: "accounts"
  profiles:
    active: "prod"
  datasource:
    url: jdbc:mysql://localhost:3306/accountsdb
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
# always try to execute the scripts that I have mentioned inside the schema.sql
  sql:
    init:
      mode: always
  jpa:
    show-sql: true
  config:
#    configserver prefix is an indication to account microservices or any other spring boot application that it is going to connect with the config server.
#   optional what are telling to the accounts microservice is, if it is not able to connect with the config server for whatever reason, it can still continue to start the microservice application.
    import: "optional:configserver:http://localhost:8071/"
#  config:
#    import:
#      - "application_qa.yml"
#      - "application_prod.yml"
#  profiles:
#    active:
#      - "prod"
#build:
#  version: "3.0"
#
#accounts:
#  message: "Welcome to EasyBank accounts related local APIs"
#  contactDetails:
#    name" : "Bao Nguyen"
#    email: "nguyenducbaokey@gmail.com"
#  onCallSupport:
#    - (+84) 788 049 042
#    - (+84) 123 456 789
  rabbitmq:
    host: "localhost"
    port: 5672
    stream:
      username: "guest"
      password: "guest"

management:
  endpoints:
    web:
      exposure:
        # spring boot actuator will enable and expose all management endpoint and inside these endpoints only we are also going to have refresh related endpoint.
        include: "*"
